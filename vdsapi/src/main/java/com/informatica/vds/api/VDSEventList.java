/* 
 * Copyright 2014 Informatica Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.informatica.vds.api;

import java.util.Map;

/**
 * Represents a list of VDSEvent. It can be used to add new events
 * generated by the transformation
 *
 */
public interface VDSEventList {

    /**
     * Add a new VDS event
     * @param buf - buffer containing the data . Data from the buffer is copied. Callers can
     * reuse the buffer.
     * @param len - size of the data in the buffer
     */
    void addEvent(byte[] buf, int len) throws Exception;

    /**
     * 
     * @param buf  buffer containing the data . Data from the buffer is copied. Callers can
     * reuse the buffer.
     * @param len - size of the data in the buffer
     * @param headers - Headers to be sent along with the event. It can contain key-value pairs describing 
     * the data. Target will be able to retrieve the headers while processing the vent.
     * @throws Exception
     */
    void addEvent(byte[] buf, int len, Map<String, String> headers) throws Exception;

}
